{"version":3,"sources":["Components/Controls.js","Components/Grid/GridHeader.js","Components/Grid/GridSide.js","Components/Grid/Grid.js","Components/Grid/GridItem.js","Components/Grid/GameBoard.js","Components/GameLog.js","Components/SunkLog.js","Components/App.js","serviceWorker.js","Game/index.js","Helpers.js","reducers.js","store.js","index.js"],"names":["connect","state","startGame","gameStarted","gameEnd","winner","notes","dispatch","generateBoard","task","type","payload","acceptPlacement","playload","endGame","hideNotes","className","onClick","GridHeader","map","item","key","GridSide","items","Array","keys","playerBoard","row","i","col","j","data-target","playerTurn","playerFire","coords","endPlayerTurn","computerFire","char","coordsArray","split","num","parseInt","setTimeout","gameBoard","gameLog","computerSunk","length","log","player","turn","ship","computerShips","sunk","playerSunk","playerShips","console","App","GameBoard","Boolean","window","location","hostname","match","createGrid","grid","push","placeShipsOnBoard","board","forEach","len","getShip","direction","Math","ceil","random","floor","checkShipFitsBoard","checkSpaceIsOpen","colStart","rowStart","placeShip","placeShips","createLog","convertColCharacter","generateComputerTurns","moves","updateGameBoard","guessRow","guessCol","target","initialState","computerBoard","computerMoves","P","name","hits","D","S","B","C","reducers","action","ships","shot","a","compTurn","randomPosition","filter","move","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9467b5a9.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction Controls({ generateBoard, startGame, acceptPlacement, endGame, gameEnd, winner, notes, hideNotes }) {\n\treturn (\n\t\t<div className=\"game-controls\">\n\t\t\t{!startGame ? (\n\t\t\t\t<>\n\t\t\t\t\t<button onClick={() => generateBoard(true)}>Generate Board</button>\n\t\t\t\t\t<button onClick={() => acceptPlacement()}>Start Game</button>\n\t\t\t\t</>\n\t\t\t) : null}\n\t\t\t<button onClick={() => hideNotes()}>{notes ? 'Hide Notes' : 'Show Notes'}</button>\n\t\t\t{gameEnd ? <h2>Game Over! {winner} Wins!</h2> : null}\n\t\t\t{startGame ? <button onClick={() => endGame()}>End Game</button> : ''}\n\t\t\t{notes ? (\n\t\t\t\t<p className=\"notes\">\n\t\t\t\t\tAs of right now you can only place your ships on the board programatically. Clicking the{' '}\n\t\t\t\t\t<code>Generate Board</code> button will place the ships on the board in a random configuration. Keep\n\t\t\t\t\tpressing the <code>Generate Board</code> until you have a placement that is acceptable, then press\n\t\t\t\t\tthe <code>Start Game</code> button. When ready to fire, select a tile on the right hand board and\n\t\t\t\t\tclick. The game log towards the bottom left keeps track of the last 10 moves by the player and\n\t\t\t\t\tcomputer. The sunk ships column tracks which ships have been sunk. The game will continue until\n\t\t\t\t\teither use sinks 5 ships or the <code>End Game</code> button is selected.\n\t\t\t\t</p>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgenerateBoard: task => dispatch({ type: 'GENERATE_BOARD', payload: task }),\n\tacceptPlacement: () => dispatch({ type: 'ACCEPT_SHIP_PLACEMENT', playload: null }),\n\tendGame: () => dispatch({ type: 'END_GAME', playload: null }),\n\thideNotes: () => dispatch({ type: 'HIDE_NOTES', playload: null }),\n});\n\nconst mapStateToProps = state => ({\n\tstartGame: state.gameStarted,\n\tgameEnd: state.gameEnd,\n\twinner: state.winner,\n\tnotes: state.notes,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);\n","import React from 'react';\n\nexport default function GridHeader() {\n\tconst items = ['', 'A', 'B', 'C', 'D', 'E', 'F', 'H', 'I', 'J', 'K'];\n\treturn (\n\t\t<div className=\"grid-header\">\n\t\t\t{items.map(item => (\n\t\t\t\t<span className=\"row-item\" key={`header-item-${item}`}>\n\t\t\t\t\t{item}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","import React from 'react';\n\nexport default function GridSide() {\n\tconst items = [...Array(10).keys()];\n\treturn (\n\t\t<div className=\"col\">\n\t\t\t{items.map(item => (\n\t\t\t\t<span className=\"row-item\" key={`side-item-${item}`}>\n\t\t\t\t\t{item + 1}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport GridHeader from './GridHeader';\nimport GridSide from './GridSide';\n\nfunction Grid({ playerBoard }) {\n\treturn (\n\t\t<div className=\"grid\">\n\t\t\t<GridHeader />\n\t\t\t<div className=\"grid-container\">\n\t\t\t\t<GridSide />\n\t\t\t\t<div className=\"col\">\n\t\t\t\t\t{playerBoard.map((row, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"row\" key={`row-${i}`}>\n\t\t\t\t\t\t\t\t{row.map((col, j) => (\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tdata-target={`${j}-${i}`}\n\t\t\t\t\t\t\t\t\t\tkey={`row-${j}-${i}`}\n\t\t\t\t\t\t\t\t\t\tclassName={`${col === 0 ? 'row-item' : 'row-item ship'} ${\n\t\t\t\t\t\t\t\t\t\t\tcol === 'H' ? 'hit' : null\n\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{col === 0 ? 'o' : col}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = state => ({\n\tplayerBoard: state.playerBoard,\n});\n\nexport default connect(mapStateToProps)(Grid);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction GridItem({ coords, char, playerFire, playerTurn, endPlayerTurn, computerFire, gameStarted }) {\n\tconst clickTarget = () => {\n\t\tif (!gameStarted) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (char !== 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (playerTurn) {\n\t\t\tendPlayerTurn();\n\t\t\tlet coordsArray = coords.split('-');\n\t\t\tplayerFire(coordsArray.map(num => parseInt(num)));\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomputerFire();\n\t\t\t}, 2000);\n\t\t}\n\t};\n\treturn (\n\t\t<div\n\t\t\tclassName={`row-item guess-item ${char === 'M' ? 'miss' : null} ${char === 'H' ? 'hit' : null}`}\n\t\t\tonClick={clickTarget}\n\t\t>\n\t\t\t<span>{char === 0 ? 'o' : char}</span>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = state => ({\n\tplayerTurn: state.playerTurn,\n\tgameEnd: state.gameEnd,\n\tgameStarted: state.gameStarted,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\tplayerFire: coords => dispatch({ type: 'PLAYER_FIRE', payload: coords }),\n\tendPlayerTurn: () => dispatch({ type: 'PLAYER_TURN', payload: null }),\n\tcomputerFire: () => dispatch({ type: 'COMPUTER_FIRE', payload: null }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GridItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport GridHeader from './GridHeader';\nimport GridSide from './GridSide';\nimport GridItem from './GridItem';\n\nfunction Grid({ gameBoard }) {\n\treturn (\n\t\t<div className=\"grid\">\n\t\t\t<GridHeader />\n\t\t\t<div className=\"grid-container\">\n\t\t\t\t<GridSide />\n\t\t\t\t<div className=\"col\">\n\t\t\t\t\t{gameBoard.map((row, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"row\" key={`row-${i}`}>\n\t\t\t\t\t\t\t\t{row.map((col, j) => (\n\t\t\t\t\t\t\t\t\t<GridItem\n\t\t\t\t\t\t\t\t\t\tcoords={`${j}-${i}`}\n\t\t\t\t\t\t\t\t\t\tchar={col}\n\t\t\t\t\t\t\t\t\t\tkey={`row-${j}-${i}`}\n\t\t\t\t\t\t\t\t\t\tclassName={col === 0 ? 'row-item' : 'row-item ship'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = state => ({\n\tgameBoard: state.gameBoard,\n});\n\nexport default connect(mapStateToProps)(Grid);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction GameLog({ gameLog, computerSunk }) {\n\treturn (\n\t\t<div>\n\t\t\t<h3>Game Log</h3>\n\t\t\t<div className=\"logs\">\n\t\t\t\t{gameLog.length > 0\n\t\t\t\t\t? gameLog.map((log, i) =>\n\t\t\t\t\t\t\ti < 9 ? (\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{log.player}: {log.col} {log.row} {log.turn} {log.ship ? `${log.ship} sunk` : null}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t  )\n\t\t\t\t\t: null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n  \nconst mapStateToProps = state => ({\n\tgameLog: state.gameLog,\n});\n\nexport default connect(mapStateToProps)(GameLog);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction SunkLog({ computerSunk, playerSunk }) {\n\tconsole.log(computerSunk);\n\treturn (\n\t\t<div className=\"sunk-log\">\n\t\t\t<h3>Sunk Ships</h3>\n\t\t\t<div>\n\t\t\t\t<div className=\"sunk\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h4>Player Ships</h4>\n\t\t\t\t\t\t<div className=\"sunk-log\">\n\t\t\t\t\t\t\t{playerSunk.length > 0 ? playerSunk.map(ship => <span>{ship}</span>) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h4>Computer Ships</h4>\n\t\t\t\t\t\t<div className=\"sunk-ships\">\n\t\t\t\t\t\t\t{computerSunk.length > 0 ? computerSunk.map(ship => <span>{ship}</span>) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = state => ({\n\tcomputerSunk: state.computerShips.sunk,\n\tplayerSunk: state.playerShips.sunk,\n});\n\nexport default connect(mapStateToProps)(SunkLog);\n","import React from 'react';\n\nimport Controls from './Controls';\nimport Grid from './Grid/Grid';\nimport GameBoard from './Grid/GameBoard';\nimport GameLog from './GameLog';\nimport './App.css';\nimport SunkLog from './SunkLog';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"title\">\n\t\t\t\t<h1>React Battleship</h1>\n\t\t\t\t<Controls />\n\t\t\t</div>\n\t\t\t<div className=\"board-layout\">\n\t\t\t\t<div>\n\t\t\t\t\t<Grid />\n\t\t\t\t\t<GameLog />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<GameBoard />\n\t\t\t\t\t<SunkLog />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export function createGrid() {\n\tlet grid = [];\n\tfor (let i = 0; i < 10; i++) {\n\t\tlet row = [];\n\t\tfor (let j = 0; j < 10; j++) {\n\t\t\trow.push(0);\n\t\t}\n\t\tgrid.push(row);\n\t}\n\treturn grid;\n}\n\nexport function placeShipsOnBoard() {\n\tconst board = createGrid();\n\tplaceShips(board);\n\treturn board;\n}\n\nfunction placeShips(board) {\n\tconst ships = ['Patrol Boat', 'Destroyer', 'Sub', 'Battleship', 'Carrier'];\n\n\tships.forEach(ship => {\n\t\tconst { len } = getShip(ship);\n\t\tconst direction = Math.ceil(Math.random() * 6) % 2 === 0 ? 'vertical' : 'horizontal';\n\n\t\tlet row = Math.floor(Math.random() * 10);\n\t\tlet col = Math.floor(Math.random() * 10);\n\n\t\tvar coords = checkShipFitsBoard(col, row, direction, len);\n\n\t\twhile (!checkSpaceIsOpen(coords.col, coords.row, direction, len, board)) {\n\t\t\tlet row = Math.floor(Math.random() * 10);\n\t\t\tlet col = Math.floor(Math.random() * 10);\n\t\t\tcoords = checkShipFitsBoard(col, row, direction, len);\n\t\t}\n\n\t\tplaceShip(coords.col, coords.row, ship, direction, board);\n\t});\n}\n\nfunction checkSpaceIsOpen(colStart, rowStart, direction, len, board) {\n\tif (direction === 'vertical') {\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tlet row = rowStart + i;\n\t\t\tif (board[row][colStart]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else if (direction === 'horizontal') {\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tlet col = colStart + i;\n\t\t\tif (board[rowStart][col]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction checkShipFitsBoard(col, row, direction, len) {\n\tconst coords = { col, row };\n\n\tif (direction === 'vertical') {\n\t\twhile (coords.row + len > 10) {\n\t\t\tcoords.row = Math.floor(Math.random() * 10);\n\t\t}\n\t}\n\n\tif (direction === 'horizontal') {\n\t\twhile (coords.col + len > 10) {\n\t\t\tcoords.col = Math.floor(Math.random() * 10);\n\t\t}\n\t}\n\treturn coords;\n}\n\nfunction placeShip(colStart, rowStart, ship, direction, board) {\n\tconst { len, char } = getShip(ship);\n\t// Check ship direction\n\tif (direction === 'vertical') {\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tlet row = rowStart + i;\n\t\t\tboard[row][colStart] = char;\n\t\t}\n\t}\n\n\tif (direction === 'horizontal') {\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tlet col = colStart + i;\n\t\t\tboard[rowStart][col] = char;\n\t\t}\n\t}\n}\n\nfunction getShip(ship) {\n\tswitch (ship) {\n\t\tcase 'Patrol Boat':\n\t\t\treturn { len: 2, char: 'P' };\n\t\tcase 'Destroyer':\n\t\t\treturn { len: 3, char: 'D' };\n\t\tcase 'Sub':\n\t\t\treturn { len: 3, char: 'S' };\n\t\tcase 'Battleship':\n\t\t\treturn { len: 4, char: 'B' };\n\t\tcase 'Carrier':\n\t\t\treturn { len: 5, char: 'C' };\n\t\tdefault:\n\t\t\treturn;\n\t}\n}\n\nexport function playerFire([col, row], board, ships) {\n\tlet turn = {};\n\tif (board[row][col] === 0) {\n\t\tturn.shot = 'M';\n\t\tturn.log = createLog('Player', [col, row], 'Miss', null);\n\t} else {\n\t\tlet ship = null;\n\t\tlet sunk = ships.sunk;\n\t\tturn.shot = 'H';\n\t\tships[board[row][col]].hits++;\n\t\tconst { name, len, hits } = ships[board[row][col]];\n\t\tif (hits >= len) {\n\t\t\tship = name;\n\t\t\tsunk = [...ships.sunk, name];\n\t\t}\n\t\tturn = {\n\t\t\tshot: 'H',\n\t\t\tships: { ...ships, sunk: sunk },\n\t\t\tlog: createLog('Player', [col, row], 'Hit', ship),\n\t\t\t...(sunk.length === 5 ? { gameEnd: true, winner: 'Player' } : {}),\n\t\t};\n\t}\n\treturn turn;\n}\n\nexport function shipTracker() {\n\treturn {\n\t\tP: {\n\t\t\tname: 'Patrol Boat',\n\t\t\tlen: 2,\n\t\t\thits: 0,\n\t\t},\n\t\tD: {\n\t\t\tname: 'Destroyer',\n\t\t\tlen: 3,\n\t\t\thits: 0,\n\t\t},\n\t\tS: {\n\t\t\tname: 'Submarine',\n\t\t\tlen: 3,\n\t\t\thits: 0,\n\t\t},\n\t\tB: {\n\t\t\tname: 'Battleship',\n\t\t\tlen: 4,\n\t\t\thits: 0,\n\t\t},\n\t\tC: {\n\t\t\tname: 'Carrier',\n\t\t\tlen: 5,\n\t\t\thits: 0,\n\t\t},\n\t\tsunk: [],\n\t};\n}\n\nfunction createLog(player, [col, row], turn, ship) {\n\treturn {\n\t\tplayer: player,\n\t\tcol: convertColCharacter(col),\n\t\trow: row + 1,\n\t\tturn: turn,\n\t\t...(ship ? { ship: ship } : {}),\n\t};\n}\n\nfunction convertColCharacter(col) {\n\tconst cols = ['A', 'B', 'C', 'D', 'E', 'F', 'H', 'I', 'J', 'K'];\n\treturn cols[col];\n}\n\nexport function generateComputerTurns() {\n\tconst grid = createGrid();\n\tconst moves = [];\n\tgrid.map((row, i) => row.map((col, j) => moves.push(`${j}-${i}`)));\n\treturn moves;\n}\n\nexport function computerFire(moves, ships, board) {\n\tconst randomPosition = Math.floor(Math.random() * moves.length);\n\tconst coords = moves[randomPosition].split('-');\n\tconst col = parseInt(coords[0]);\n\tconst row = parseInt(coords[1]);\n\n\tlet turn = {};\n\n\tif (board[row][col] === 0) {\n\t\tturn.log = createLog('Computer', [col, row], 'Miss', null);\n\t} else {\n\t\tlet ship = null;\n\t\tlet sunk = ships.sunk;\n\t\tturn.shot = 'H';\n\t\tships[board[row][col]].hits++;\n\t\tconst { name, len, hits } = ships[board[row][col]];\n\t\tif (hits >= len) {\n\t\t\tship = name;\n\t\t\tsunk = [...ships.sunk, name];\n\t\t}\n\t\tturn = {\n\t\t\tshot: 'H',\n\t\t\tships: { ...ships, sunk: sunk },\n\t\t\tlog: createLog('Computer', [col, row], 'Hit', ship),\n\t\t\tcol: col,\n\t\t\trow: row,\n\t\t\t...(sunk.length === 5 ? { gameEnd: true } : {}),\n\t\t};\n\t}\n\tturn.moves = moves.filter((move, i) => i !== randomPosition);\n\treturn turn;\n}\n","export function updateGameBoard(board, guessRow, guessCol, target) {\n\treturn board.map((row, i) => {\n\t\tif (i !== guessRow) {\n\t\t\treturn row;\n\t\t}\n\t\treturn row.map((col, j) => {\n\t\t\tif (j !== guessCol) {\n\t\t\t\treturn col;\n\t\t\t}\n\t\t\treturn target;\n\t\t});\n\t});\n}\n","import { createGrid, placeShipsOnBoard, playerFire, shipTracker, generateComputerTurns, computerFire } from './Game';\nimport { updateGameBoard } from './Helpers';\n\nconst initialState = {\n\tplayerBoard: createGrid(),\n\tcomputerBoard: placeShipsOnBoard(),\n\tgameBoard: createGrid(),\n\tcomputerMoves: generateComputerTurns(),\n\tgameLog: [],\n\tgameStarted: false,\n\tplayerShips: shipTracker(),\n\tcomputerShips: shipTracker(),\n\tplayerSunk: [],\n\tcomputerSunk: [],\n\tplayerTurn: true,\n\tgameEnd: false,\n\twinner: '',\n\tnotes: true,\n};\n\nfunction reducers(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase 'GENERATE_BOARD':\n\t\t\treturn { ...state, playerBoard: placeShipsOnBoard() };\n\t\tcase 'PLAYER_FIRE':\n\t\t\tconst [col, row] = action.payload;\n\t\t\tconst turn = playerFire([col, row], state.computerBoard, state.computerShips);\n\n\t\t\tconst a = {\n\t\t\t\tgameBoard: updateGameBoard(state.gameBoard, row, col, turn.shot),\n\t\t\t\tgameLog: [turn.log, ...state.gameLog],\n\t\t\t\t...(turn.ships ? { computerShips: turn.ships } : {}),\n\t\t\t\t...(turn.sunk ? { computerSunk: [...state.computerSunk, turn.sunk] } : {}),\n\t\t\t\t...(turn.gameEnd ? { gameEnd: true, winner: 'Player', playerTurn: false } : {}),\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...a,\n\t\t\t};\n\t\tcase 'COMPUTER_FIRE':\n\t\t\tif (state.gameEnd) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t\tconst compTurn = computerFire(state.computerMoves, state.playerShips, state.playerBoard);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgameLog: [compTurn.log, ...state.gameLog],\n\t\t\t\tplayerTurn: true,\n\t\t\t\tcomputerMoves: compTurn.moves,\n\t\t\t\t...(compTurn.ships ? { playerShips: compTurn.ships } : {}),\n\t\t\t\t...(compTurn.shot\n\t\t\t\t\t? { playerBoard: updateGameBoard(state.playerBoard, compTurn.row, compTurn.col, compTurn.shot) }\n\t\t\t\t\t: {}),\n\t\t\t\t...(compTurn.gameEnd ? { gameEnd: true, winner: 'Computer', playerTurn: false } : {}),\n\t\t\t};\n\t\tcase 'ACCEPT_SHIP_PLACEMENT':\n\t\t\treturn { ...state, gameStarted: true };\n\t\tcase 'PLAYER_TURN':\n\t\t\treturn { ...state, playerTurn: !state.playerTurn };\n\t\tcase 'HIDE_NOTES':\n\t\t\treturn { ...state, notes: !state.notes };\n\t\tcase 'END_GAME':\n\t\t\treturn {\n\t\t\t\tplayerBoard: createGrid(),\n\t\t\t\tcomputerBoard: placeShipsOnBoard(),\n\t\t\t\tgameBoard: createGrid(),\n\t\t\t\tcomputerMoves: generateComputerTurns(),\n\t\t\t\tgameLog: [],\n\t\t\t\tgameStarted: false,\n\t\t\t\tplayerShips: shipTracker(),\n\t\t\t\tcomputerShips: shipTracker(),\n\t\t\t\tplayerSunk: [],\n\t\t\t\tcomputerSunk: [],\n\t\t\t\tplayerTurn: true,\n\t\t\t\tgameEnd: false,\n\t\t\t\twinner: '',\n\t\t\t\tnotes: state.notes,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducers;\n","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nconst store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}